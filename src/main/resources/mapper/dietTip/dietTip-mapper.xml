<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="dietTip">

	<resultMap type="boardLike" id="boardLikeDB">
		<result property="likeIndex" column="LIKE_INDEX" />
		<result property="targetIndex" column="TARGET_INDEX" />
		<result property="targetType" column="TARGET_TYPE" />
		<result property="mbIndex" column="MB_INDEX" />
		<result property="targetMbIndex" column="TARGET_MB_INDEX" />
	</resultMap>

	<resultMap type="bookMark" id="bookMarkDB">
		<result property="bmkIndex" column="BMK_INDEX" />
		<result property="mbIndex" column="MB_INDEX" />
		<result property="postIndex" column="POST_INDEX" />
	</resultMap>

	<!-- 페이징 처리 - 리스트 불러오기 -->
	<select id="getList" parameterType="dietTipPageData" resultType="dietTip">
		SELECT
		(SELECT COUNT(*) FROM BOARD_COMMENT_TBL C WHERE C.POST_INDEX =
		D.DT_INDEX) AS
		dtCmtNo,
		DT_INDEX AS dtIndex,
		DT_NO AS dtNo,
		DT_TYPE AS
		dtType,
		DT_TITLE
		AS
		dtTitle,
		DT_MAIN_PHOTO AS dtMainPhoto,
		DT_WRITER_NO AS
		dtWriterNo,
		DT_SAMMARY AS dtSammary,
		DT_EXPLAIN AS dtExplain,
		DT_DATE AS
		dtDate,
		DT_SEE AS dtSee,
		DT_LIKE AS dtLike
		FROM (SELECT DT.*,
		ROW_NUMBER()
		OVER(ORDER BY DT_INDEX DESC) AS NUM
		FROM DIETTIP_TB DT,
		MEMBER_TBL MB
		WHERE DT.DT_WRITER_NO = MB.MB_INDEX (+)
		<choose>
			<!-- 게시물 타입에 따라 출력, 앞에 WHERE 문이 있어서 AND로 썼어요 -->
			<when test="type.equals('column')">
				AND DT_TYPE = 1
			</when>
			<when test="type.equals('sport')">
				AND DT_TYPE = 2
			</when>
			<when test="type.equals('dietFood')">
				AND DT_TYPE = 3
			</when>
			<when test="type.equals('successLatter')">
				AND DT_TYPE = 4
			</when>
			<otherwise>
				AND DT_TYPE > 0
			</otherwise>
		</choose>

		<choose>
			<when test="category!=null">
				<!-- 검색할 때 -->
				<choose>
					<when test="category.equals('title')">
						AND DT_TITLE LIKE '%'||#{searchText}||'%'
					</when>
					<when test="category.equals('titleContents')">
						AND (DT_TITLE LIKE '%'||#{searchText}||'%'
						OR
						DT_EXPLAIN LIKE '%'||#{searchText}||'%')
					</when>
					<when test="category.equals('writer')">
						AND MB.MB_NICKNAME LIKE '%'||#{searchText}||'%'
					</when>
				</choose>

			</when>
		</choose>

		) d WHERE NUM BETWEEN #{start} AND #{end}
	</select>

	<!-- 페이징 처리 - 내비게이션 생성 -->
	<select id="getNavi" resultType="java.lang.Integer"
		parameterType="dietTipPageData">
		SELECT COUNT(*) AS TOTALCOUNT
		FROM DIETTIP_TB DT, MEMBER_TBL MB
		WHERE
		DT.DT_WRITER_NO = MB.MB_INDEX (+)
		<choose>
			<when test="type.equals('column')">
				AND DT_TYPE = 1
			</when>
			<when test="type.equals('sport')">
				AND DT_TYPE = 2
			</when>
			<when test="type.equals('dietFood')">
				AND DT_TYPE = 3
			</when>
			<when test="type.equals('successLatter')">
				AND DT_TYPE = 4
			</when>
		</choose>

		<choose>
			<when test="category!=null">
				<!-- 검색할 때 -->
				<choose>
					<when test="category.equals('title')">
						AND DT_TITLE LIKE '%'||#{searchText}||'%'
					</when>
					<when test="category.equals('titleContents')">
						AND (DT_TITLE LIKE '%'||#{searchText}||'%'
						OR
						DT_EXPLAIN LIKE '%'||#{searchText}||'%')
					</when>
					<when test="category.equals('writer')">
						AND MB.MB_NICKNAME LIKE '%'||#{searchText}||'%'
					</when>
				</choose>

			</when>
		</choose>

	</select>

	<!-- 게시물 불러오기 -->
	<select id="getOne" resultType="dietTip">
		SELECT DT.DT_INDEX AS dtIndex,
		DT.DT_NO AS dtNo,
		DT.DT_TYPE AS dtType,
		DT.DT_TITLE AS dtTitle,
		DT.DT_MAIN_PHOTO AS dtMainPhoto,
		MB.MB_NICKNAME AS dtNickname,
		DT.DT_SAMMARY AS dtSammary,
		DT.DT_EXPLAIN AS dtExplain,
		DT.DT_DATE AS
		dtDate,
		DT.DT_SEE AS dtSee,
		DT.DT_LIKE AS dtLike,
        MB.MB_IMAGE AS dtWriterPhoto
		FROM DIETTIP_TB DT,
		MEMBER_TBL MB WHERE DT.DT_WRITER_NO = MB.MB_INDEX AND DT_INDEX =
		#{index}
	</select>

	<!-- 다이어트 팁 게시물 쓰기 -->
	<insert id="registDietTip" parameterType="dietTip">
		INSERT INTO
		DIETTIP_TB
		VALUES(INDEX_NO_SEQ.NEXTVAL, DT_NO_SEQ.NEXTVAL, #{dtType},
		#{dtTitle},
		#{dtMainPhoto}, #{dtWriterNo}, #{dtSammary}, #{dtExplain},
		SYSDATE, 0,
		0)
	</insert>

	<!-- 다이어트 팁 게시물 삭제 -->
	<delete id="deleteDietTip">
		DELETE DIETTIP_TB WHERE DT_INDEX = #{indexNo}
	</delete>

	<!-- 다이어트 팁 수정 페이지 불러오기 -->
	<select id="loadUpdateDietTip" resultType="dietTip">
		SELECT DT.DT_INDEX AS
		dtIndex,
		DT.DT_NO AS dtNo,
		DT.DT_TYPE AS dtType,
		DT.DT_TITLE AS dtTitle,
		DT.DT_MAIN_PHOTO AS dtMainPhoto,
		MB.MB_NICKNAME AS dtNickname,
		DT.DT_SAMMARY AS dtSammary,
		DT.DT_EXPLAIN AS dtExplain,
		DT.DT_DATE AS
		dtDate,
		DT.DT_SEE AS dtSee,
		DT.DT_LIKE AS dtLike
		FROM DIETTIP_TB DT,
		MEMBER_TBL MB WHERE DT.DT_WRITER_NO = MB.MB_INDEX AND DT_INDEX =
		#{index}
	</select>

	<!-- 다이어트 팁 페이지 수정 -->
	<select id="updateDietTip" parameterType="dietTip">
		UPDATE DIETTIP_TB SET
		DT_TITLE = #{dtTitle}, DT_TYPE = #{dtType}, DT_MAIN_PHOTO =
		#{dtMainPhoto}, DT_SAMMARY = #{dtSammary}, DT_EXPLAIN = #{dtExplain}
		WHERE DT_INDEX = #{dtIndex}
	</select>

	<!-- 조회수 증가 -->
	<update id="postHit" parameterType="Integer">
		UPDATE DIETTIP_TB
		SET
		DT_SEE =
		DT_SEE + 1
		WHERE DT_INDEX = #{indexNo}

	</update>


	<!-- 좋아요 테이블 삭제 -->
	<delete id="likeDown" parameterType="boardLike">
		DELETE FROM BOARD_LIKE_TBL
		WHERE MB_INDEX = #{mbIndex}
	</delete>

	<!-- 좋아요 테이블 추가 -->
	<insert id="likeUp" parameterType="boardLike">
		INSERT INTO BOARD_LIKE_TBL
		VALUES(BOARD_LIKE_TBL_SEQ.NEXTVAL,#{targetIndex},1,#{mbIndex},#{targetMbIndex})
	</insert>

	<!-- 게시글 좋아요 수 -1 -->
	<update id="postDown" parameterType="boardLike">
		UPDATE DIETTIP_TB
		SET
		DT_LIKE
		= DT_LIKE -1
		WHERE DT_INDEX = #{targetIndex}
	</update>

	<!-- 게시글 좋아요 수 +1 -->
	<update id="postUp" parameterType="boardLike">
		UPDATE DIETTIP_TB
		SET
		DT_LIKE =
		DT_LIKE +1
		WHERE DT_INDEX = #{targetIndex}
	</update>

	<!-- 좋아요 체크 -->
	<select id="checkLike" parameterType="boardLike" resultType="boardLike"
		resultMap="boardLikeDB">
		SELECT *
		FROM BOARD_LIKE_TBL
		WHERE TARGET_INDEX =
		#{targetIndex} AND MB_INDEX = #{mbIndex}
	</select>

	<!-- 이전글 다음글 가져오기 -->
	<select id="nextPreDt" resultType="dietTip">
		<![CDATA[ 
		SELECT 
		DT_INDEX AS dtIndex,
		DT_TYPE AS dtType,
		DT_TITLE AS dtTitle,
		DT_DATE AS dtDate,
		DT_SEE AS dtSee
		FROM (SELECT DIETTIP_TB.*, ROW_NUMBER() OVER(ORDER 
			BY DT_INDEX DESC) AS NUM FROM DIETTIP_TB WHERE DIETTIP_TB.DT_INDEX < #{dtIndex}
			) WHERE NUM = 1 
		UNION ALL
		SELECT
		DT_INDEX AS dtIndex,
		DT_TYPE AS dtType,
		DT_TITLE AS dtTitle,
		DT_DATE AS dtDate,
		DT_SEE AS dtSee
		 FROM (SELECT DIETTIP_TB.*, ROW_NUMBER() 
			OVER(ORDER BY DT_INDEX ASC) AS NUM FROM DIETTIP_TB WHERE DIETTIP_TB.DT_INDEX > #{dtIndex}
			) WHERE NUM = 1 
		]]>
	</select>

	<!-- 해당 게시물을 보면 회원 정보의 게시물 본 횟수 늘려 주기 -->
	<update id="upMbDtSee" parameterType="upMbSee">
		UPDATE MEMBER_TBL SET
		<choose>
			<when test="type.equals('column')">
				MB_DT_COLUMN_SEE = MB_DT_COLUMN_SEE + 1
			</when>
			<when test="type.equals('sport')">
				MB_DT_SPORT_SEE = MB_DT_SPORT_SEE + 1
			</when>
			<when test="type.equals('dietFood')">
				MB_DT_DIETFOOD_SEE = MB_DT_DIETFOOD_SEE + 1
			</when>
			<when test="type.equals('successLatter')">
				MB_DT_SUCCESS_LATTER_SEE = MB_DT_SUCCESS_LATTER_SEE +
				1
			</when>
			<!-- 의미 없는 거 -->
			<otherwise>
				MB_DT_SUCCESS_LATTER_SEE = MB_DT_SUCCESS_LATTER_SEE
			</otherwise>
		</choose>
		WHERE MB_INDEX = #{mbIndex}
	</update>

	<!-- 종류별로 해당 회원이 게시물을 봤던 횟수 불러오기 -->
	<select id="getDtSeeList" resultType="member">
		SELECT
		MB_DT_COLUMN_SEE AS
		mbDtColSee,
		MB_DT_SPORT_SEE AS mbDtspoSee,
		MB_DT_DIETFOOD_SEE AS mbDtDfSee,
		MB_DT_SUCCESS_LATTER_SEE AS mbDtSlSee
		FROM MEMBER_TBL
		WHERE MB_INDEX = #{mbIndex}
	</select>

	<!-- -->
	<select id="getMatchedDtList" parameterType="java.lang.String" resultType="dietTip">
		SELECT
		DT_INDEX AS dtIndex,
		DT_NO AS dtNo,
		DT_TYPE AS
		dtType,
		DT_TITLE
		AS
		dtTitle,
		DT_MAIN_PHOTO AS dtMainPhoto,
		DT_WRITER_NO AS
		dtWriterNo,
		DT_SAMMARY AS
		dtSammary,
		DT_EXPLAIN AS dtExplain,
		DT_DATE AS
		dtDate,
		DT_SEE AS dtSee,
		DT_LIKE AS dtLike
		FROM (SELECT DIETTIP_TB.*,
		ROW_NUMBER()
		OVER(ORDER BY DT_DATE DESC) AS NUM
		FROM DIETTIP_TB
		<choose>
			<when test="type.equals('column')">
				WHERE DIETTIP_TB.DT_TYPE = 1
			</when>
			<when test="type.equals('sport')">
				WHERE DIETTIP_TB.DT_TYPE = 2
			</when>
			<when test="type.equals('dietFood')">
				WHERE DIETTIP_TB.DT_TYPE = 3
			</when>
			<when test="type.equals('successLatter')">
				WHERE DIETTIP_TB.DT_TYPE = 4
			</when>
			<otherwise>
				WHERE DIETTIP_TB.DT_TYPE = 4
			</otherwise>
		</choose>
		)WHERE NUM BETWEEN 1 AND 3
	</select>
</mapper>
