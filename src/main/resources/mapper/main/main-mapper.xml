<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="main">

	<select id="getList" parameterType="healthCenterPage"
		resultType="healthCenter">
		SELECT
		HC_LOCATION AS hcLocation,
		HC_ADDRESS AS hcAddress,
		HC_PHONE AS
		hcPhone,
		HC_LATITUDE AS hcLatitude,
		HC_LONGITUDE AS hcLongitude,
		HC_TYPE
		AS hcType
		FROM (SELECT
		HEALTHCENTER_TBL.*, ROW_NUMBER() OVER(ORDER BY
		HC_LOCATION ASC) AS NUM
		FROM HEALTHCENTER_TBL
		<choose>
			<when test="type.equals('서울특별시')">
				WHERE HC_TYPE = '서울특별시'
			</when>
			<when test="type.equals('부산광역시')">
				WHERE HC_TYPE = '부산광역시'
			</when>
			<when test="type.equals('인천광역시')">
				WHERE HC_TYPE = '인천광역시'
			</when>
			<when test="type.equals('대전광역시')">
				WHERE HC_TYPE = '대전광역시'
			</when>
			<when test="type.equals('대구광역시')">
				WHERE HC_TYPE = '대구광역시'
			</when>
			<when test="type.equals('광주광역시')">
				WHERE HC_TYPE = '광주광역시'
			</when>
			<when test="type.equals('울산광역시')">
				WHERE HC_TYPE = '울산광역시'
			</when>
			<when test="type.equals('경기도')">
				WHERE HC_TYPE = '경기도'
			</when>
			<when test="type.equals('전라도')">
				WHERE HC_TYPE LIKE '전라%'
			</when>
			<when test="type.equals('경상도')">
				WHERE HC_TYPE LIKE '경상%'
			</when>
			<when test="type.equals('강원도')">
				WHERE HC_TYPE = '강원도'
			</when>
			<when test="type.equals('충청도')">
				WHERE HC_TYPE LIKE '충청%'
			</when>
			<when test="type.equals('제주도')">
				WHERE HC_TYPE = '제주도'
			</when>
		</choose>
		)
		WHERE NUM BETWEEN #{start} and #{end}
	</select>

	<select id="getNavi" resultType="java.lang.Integer"
		parameterType="healthCenterPage">
		select count(*) as totalCount
		from HEALTHCENTER_TBL
		<choose>
			<when test="type.equals('서울특별시')">
				WHERE HC_TYPE = '서울특별시'
			</when>
			<when test="type.equals('부산광역시')">
				WHERE HC_TYPE = '부산광역시'
			</when>
			<when test="type.equals('인천광역시')">
				WHERE HC_TYPE = '인천광역시'
			</when>
			<when test="type.equals('대전광역시')">
				WHERE HC_TYPE = '대전광역시'
			</when>
			<when test="type.equals('대구광역시')">
				WHERE HC_TYPE = '대구광역시'
			</when>
			<when test="type.equals('광주광역시')">
				WHERE HC_TYPE = '광주광역시'
			</when>
			<when test="type.equals('울산광역시')">
				WHERE HC_TYPE = '울산광역시'
			</when>
			<when test="type.equals('경기도')">
				WHERE HC_TYPE = '경기도'
			</when>
			<when test="type.equals('전라도')">
				WHERE HC_TYPE LIKE '전라%'
			</when>
			<when test="type.equals('경상도')">
				WHERE HC_TYPE LIKE '경상%'
			</when>
			<when test="type.equals('강원도')">
				WHERE HC_TYPE = '강원도'
			</when>
			<when test="type.equals('충청도')">
				WHERE HC_TYPE LIKE '충청%'
			</when>
			<when test="type.equals('제주도')">
				WHERE HC_TYPE = '제주도'
			</when>
		</choose>
	</select>
	
	<select id="insertOnSesssion" parameterType="onSession">
		
		INSERT INTO
		ON_Session_TBL
		VALUES(SESSION_SEQ.NEXTVAL,#{sessionId},#{sessionIp},sysdate,to_char(sysdate,'yyyy/mm/dd hh24:mi:ss'),to_char(sysdate + 30/(24*60),'yyyy/mm/dd hh24:mi:ss'),#{state},#{loginId},#{device})
	
	</select>
	
	<select id="selectAllSessionList" resultType="onSession">
	select
	SS_INDEX AS indexNo,
    SS_ID AS sessionId,
    SS_IP AS sessionIp,
    SS_STATE AS state,
    SS_LOGIN AS loginId,     
    SS_DEVICE AS device
    FROM on_session_tbl    
	</select>

	<update id="updateOnSesssion" parameterType="upDateSSVO">
	update 
	On_Session_TBL
	set SS_Device = #{device},SS_Login = #{mbNickName}, SS_ACtivation = to_char(sysdate,'yyyy/mm/dd hh24:mi:ss'), SS_INVALIDATE = to_char(sysdate + 30/(24*60),'yyyy/mm/dd hh24:mi:ss'), SS_STATE = 'ON' where ss_Id = #{sessionId}
	</update>
	
	<update id="updateAlreadyOnSesssion" parameterType="upDateSSVO">
	update 
	On_Session_TBL
	set SS_Device = #{device},SS_ACtivation = to_char(sysdate,'yyyy/mm/dd hh24:mi:ss'), SS_INVALIDATE = to_char(sysdate + 30/(24*60),'yyyy/mm/dd hh24:mi:ss')  where ss_Id = #{sessionId}
	</update>
	
	
	<select id="selectAllSessionList2" resultType="allSession">
	select
	SS_INDEX AS indexNo,
	SS_ID AS sessionId,
	SS_IP AS sessionIp,
	SS_FIRSTON AS firstOn,
	SS_INVALIDATE AS invalidate,
	SS_STATE AS state,
	SS_LOGIN AS logInNickName,
	SS_DEVICE AS device
    FROM on_session_tbl
    where sysdate >= ss_Invalidate
	</select>
	
	<delete id="autoDeleteSession" parameterType="allSession">
	delete from on_session_tbl where ss_index = #{indexNo} 
	</delete>
	<insert id="autoTransSession" parameterType="allSession">
	INSERT INTO
	OFF_Session_TBL
	VALUES(#{indexNo},#{sessionId},#{sessionIp},#{firstOn},CEIL(((sysdate-to_date(#{firstOn},'yy/MM/dd hh24:mi:ss'))*24*60*60)),#{logInNickName},#{device},sysdate)	</insert>
	</mapper>
	
	
