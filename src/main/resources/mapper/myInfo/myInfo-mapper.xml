<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="myInfo">
	<resultMap type="member" id="memberDB">
		<result property="mbIndex" column="MB_INDEX" />
		<result property="mbId" column="MB_ID" />
		<result property="mbPwd" column="MB_PWD" />
		<result property="mbName" column="MB_NAME" />
		<result property="mbNickName" column="MB_NICKNAME" />
		<result property="mbGender" column="MB_GENDER" />
		<result property="mbImage" column="MB_IMAGE" />
		<result property="mbPromise" column="MB_PROMISE" />
		<result property="mbAge" column="MB_AGE" />
		<result property="mbPhone" column="MB_PHONE" />
		<result property="mbAddress" column="MB_ADDRESS" />
		<result property="mbInterest" column="MB_INTEREST" />
		<result property="mbGrade" column="MB_GRADE" />
		<result property="mbHeight" column="MB_HEIGHT" />
		<result property="mbWeight" column="MB_WEIGHT" />
		<result property="mbBmi" column="MB_BMI" />
		<result property="mbReport" column="MB_REPORT" />
		<result property="mbEnrollDate" column="MB_ENROLLDATE" />
	</resultMap>

	<delete id="deleteMyBookMark" parameterType="bookMark">
		DELETE FROM BOARD_BOOKMARK_TBL WHERE BMK_INDEX = #{bmkIndex} AND MB_INDEX = #{mbIndex}
	</delete>

	<!-- 나의 게시물 삭제 -->
	<delete id="deleteMyPost" parameterType="community">
		DELETE FROM BOARD_POST_TBL WHERE POST_INDEX = #{postIndex} AND MB_INDEX = #{mbIndex}
	</delete>

	<delete id="deleteMyComment" parameterType="comment">
		DELETE FROM BOARD_COMMENT_TBL WHERE CMT_INDEX = #{cmtIndex} AND MB_INDEX = #{mbIndex}
	</delete>

	<!-- 1대1 문의 삭제 -->
	<delete id="deleteMyQuestion" parameterType="question">
		DELETE FROM QUESTION_TBL WHERE QS_INDEX = #{qsIndex} AND MB_INDEX = #{mbIndex}
	</delete>

	<!-- 1대1 문의 -->
	<insert id="question" parameterType="question">
		INSERT INTO QUESTION_TBL
		VALUES(QUESTION_SEQ.NEXTVAL, #{qsTitle}, #{qsContent}, #{mbIndex},
		SYSDATE, #{qsAnswerCheck})
	</insert>

	<!-- 회원 탈퇴 -->
	<delete id="secessionMember" parameterType="member">
		DELETE FROM
		MEMBER_TBL WHERE MB_ID = #{mbId}
	</delete>

	<!-- 회원정보 수정 -->
	<update id="updateMyInfo" parameterType="member">
		UPDATE MEMBER_TBL
		SET
		MB_PWD = #{mbPwd},
		MB_NICKNAME = #{mbNickName},
		MB_PHONE = #{mbPhone},
		MB_PROMISE = #{mbPromise},
		MB_HEIGHT = #{mbHeight},
		MB_WEIGHT =
		#{mbWeight}
		WHERE MB_ID = #{mbId}
	</update>

	<!-- 한명의 회원정보 -->

	<select id="selectOneMember" parameterType="member" resultType="member">
		SELECT
		MB_INDEX AS mbIndex,
		MB_ID AS mbId,
		MB_REPORT AS
		mbReport,
		MB_PWD AS mbPwd,
		MB_NAME AS mbName,
		MB_NICKNAME AS mbNickName,
		MB_GENDER AS mbGender,
		MB_IMAGE AS mbImage,
		MB_PROMISE AS mbPromise,
		MB_AGE AS mbAge,
		MB_PHONE AS mbPhone,
		MB_ADDRESS AS mbAddress,
		MB_INTEREST AS mbInterest,
		MB_GRADE AS mbGrade,
		MB_HEIGHT AS mbHeight,
		MB_WEIGHT AS mbWeight,
		MB_ENROLLDATE
		AS mbEnrollDate
		FROM MEMBER_TBL
		WHERE MB_ID = #{mbId}
	</select>

	<!-- 마이페이지 - 프로필 사진 삭제 -->
	<delete id="deleteMyPicture" parameterType="member">
		UPDATE MEMBER_TBL SET
		MB_IMAGE
		='http://upload.inven.co.kr/upload/2014/11/01/bbs/i3464037277.jpg'
		WHERE MB_ID = #{mbId}
	</delete>

	<!-- 마이페이지 - 일대일 문의 관리자 답변 -->
	<select id="questionAnswer" resultType="question" parameterType="Integer">
		SELECT
		QS_INDEX AS qsIndex,
		QS_TITLE AS qsTitle,
		QS_CONTENT AS qsContent,
		MB_NICKNAME AS mbNickName,
		QS_WRITETIME AS
		qsWriteTime,
		QS_ANSWERCHECK AS qsAnswerCheck,
		ANS_CONTENT AS ansContent
		FROM MEMBER_TBL JOIN QUESTION_TBL USING (MB_INDEX)
		LEFT OUTER JOIN
		ANSWER_TBL USING(QS_INDEX) WHERE QS_INDEX = #{qsIndex}
	</select>


	<!-- 마이페이지 - 장바구니 -->
	<select id="myWishList" parameterType="member" resultType="product">
		SELECT PD_INDEX AS pdIndex,PD_NAME AS pdName ,PD_IMAGE AS
		pdImage,
		PD_PRICE AS pdPrice FROM PRODUCT_TBL
		JOIN MY_WISHLIST_TBL
		USING(PRODUCT_INDEX)
		JOIN MEMBER_TBL USING(MB_INDEX)
		WHERE MB_ID =
		#{mbId}
	</select>


	<!-- 회원 가입 -->
	<insert id="signup" parameterType="member">
		INSERT INTO MEMBER_TBL
		VALUES(MEMBER_SEQ.NEXTVAL, #{mbId}, #{mbPwd}, null, #{mbNickName},
		#{mbGender},
		'http://upload.inven.co.kr/upload/2014/11/01/bbs/i3464037277.jpg',
		null, null, null, null, #{mbInterest},
		'일반회원', null,
		null, null, 'n',
		SYSDATE,0,0,0,0,0,0,0,0,0,0,0,0)
	</insert>


	<!-- 나의 활동 정보 (댓글,게시물,가입날짜) -->

	<select id="myActivity" parameterType="member" resultType="myActivity">
		SELECT MB_INDEX AS mbIndex,
		(SELECT COUNT(*) FROM BOARD_COMMENT_TBL WHERE MB_INDEX = #{mbIndex}) AS myCommentCount,
		(SELECT COUNT(*)
		FROM BOARD_POST_TBL WHERE MB_INDEX = #{mbIndex}) AS myBoardCount,
		Mb_ENROLLDATE as mbEnrollDate,
		MB_GRADE AS mbGrade
		FROM MEMBER_TBL
		WHERE MB_INDEX = #{mbIndex}
	</select>

	<!-- 나의 활동 정보 (출석) -->

	<select id="myCount" resultType="java.lang.Integer">
		SELECT COUNT(*) FROM (SELECT DISTINCT(TRUNC(SS_LASTIN)) FROM OFF_SESSION_TBL WHERE SS_LOGIN =#{mbNickName} GROUP BY SS_LASTIN)
	</select>

	<resultMap type="community" id="communityDB">
		<result property="postIndex" column="POST_INDEX" />
		<result property="brdIndex" column="BRD_INDEX" />
		<result property="postTitle" column="POST_TITLE" />
		<result property="postContent" column="POST_CONTENT" />
		<result property="mbIndex" column="MB_INDEX" />
		<result property="postDateTime" column="POST_DATETIME" />
		<result property="postComCount" column="POST_COMMENT_COUNT" />
		<result property="postHit" column="POST_HIT" />
		<result property="postLike" column="POST_LIKE" />
		<result property="postImage" column="POST_IMAGE" />
		<result property="bcaIndex" column="BCA_INDEX" />
	</resultMap>

	<!-- 마이페이지 나의게시물 내비게이션 생성 -->
	<select id="myPostGetNavi" resultType="java.lang.Integer" parameterType="myActivity">
		SELECT COUNT(*) AS totalCount
		FROM BOARD_POST_TBL WHERE
		MB_INDEX = #{mbIndex}
	</select>


	<!-- 나의 일대일 문의 - 페이징 처리 -->
	<select id="myQuestionGetNavi" resultType="java.lang.Integer" parameterType="myActivity">
		SELECT COUNT(*) AS totalCount
		FROM QUESTION_TBL
		WHERE MB_INDEX = #{mbIndex}
	</select>

	<!-- 마이페이지 - 일대일 문의 -->
	<select id="myQuestionList" parameterType="myQuestionPDVO" resultType="question">
		SELECT MB_INDEX AS mbIndex,
		QS_INDEX AS qsIndex,
		QS_TITLE AS qsTitle,
		QS_CONTENT AS qsContent,
		QS_WRITETIME AS qsWriteTime,
		QS_ANSWERCHECK AS qsAnswerCheck
		FROM
		(SELECT
		QUESTION_TBL.*,
		ROW_NUMBER() OVER(ORDER BY
		QS_WRITETIME
		DESC) AS NUM FROM QUESTION_TBL
		WHERE MB_INDEX = #{mbIndex}
		)WHERE NUM BETWEEN
		#{start} AND #{end}
	</select>


	<select id="myPostList" parameterType="myPostPDVO" resultType="community" resultMap="communityDB">

		SELECT *
		FROM (SELECT
		BOARD_POST_TBL.*,
		ROW_NUMBER() OVER(ORDER BY
		POST_DATETIME
		DESC)
		AS NUM FROM BOARD_POST_TBL
		WHERE MB_INDEX = #{mbIndex}
		) WHERE NUM BETWEEN
		#{start} AND #{end}
		
	</select>


	<select id="nickNameCheck" parameterType="member" resultType="member">
		SELECT
		MB_INDEX AS mbIndex,
		MB_ID AS mbId,
		MB_PWD AS mbPwd,
		MB_NAME AS
		mbName,
		MB_NICKNAME AS mbNickName,
		MB_GENDER AS mbGender,
		MB_IMAGE
		AS
		mbImage,
		MB_PROMISE AS mbPromise,
		MB_AGE AS mbAge,
		MB_PHONE AS
		mbPhone,
		MB_ADDRESS AS mbAddress,
		MB_INTEREST AS mbInterest,
		MB_GRADE AS
		mbGrade,
		MB_HEIGHT AS mbHeight,
		MB_WEIGHT AS mbWeight,
		MB_BMI AS
		mbBmi,
		MB_REPORT AS mbReport,
		MB_ENROLLDATE AS mbEnrollDate
		FROM MEMBER_TBL
		WHERE MB_NICKNAME = #{nickName}
	</select>

	<!-- 마이페이지 - 프로필 사진 업데이트 -->
	<update id="updateMyPicture" parameterType="member">
		UPDATE MEMBER_TBL SET
		MB_IMAGE = #{mbImage} where MB_ID = #{mbId}
	</update>

	<!-- 마이페이지 - 나의 게시물 -->
	<select id="myPost" resultType="community" resultMap="communityDB" parameterType="member">
		SELECT
		POST_TITLE AS postTitle,
		POST_CONTENT AS postContent,
		POST_DATETIME AS postDateTime,
		POST_INDEX
		AS postIndex
		,
		FROM BOARD_POST_TBL WHERE MB_INDEX = #{mbIndex}
	</select>

	<!-- 마이페이지 - 나의 댓글 -->
	<select id="myCommentList" resultType="comment" parameterType="myCommentPDVO">

		SELECT
		BPT.POST_INDEX AS postIndex,
		BCA_INDEX AS bcaIndex,
		DT_TYPE AS dtType,
		DT_INDEX AS dtIndex,
		POST_TITLE AS postTitle,
		DT_TITLE AS
		dtTitle,
		DT_DATE AS dtDate,
		DT_LIKE AS dtLike,
		DT_SEE AS dtSee,
		POST_DATETIME AS postDateTime,
		POST_LIKE AS postLike,
		CMT_DATETIME AS cmtDateTime,
		CMT_CONTENT AS cmtContent,
		CMT_LIKE AS cmtLike,
		CMT_INDEX AS
		cmtIndex
		FROM (SELECT
		BOARD_COMMENT_TBL.*,ROW_NUMBER() OVER(ORDER BY CMT_DATETIME DESC)
		AS NUM FROM BOARD_COMMENT_TBL WHERE MB_INDEX = #{mbIndex}) BCT,
		BOARD_POST_TBL BPT, DIETTIP_TB DT
		WHERE
		(BCT.POST_INDEX =
		BPT.POST_INDEX(+))
		AND (BCT.POST_INDEX = DT.DT_INDEX(+))
		AND BCT.MB_INDEX = #{mbIndex}
		AND NUM BETWEEN #{start} AND #{end}

	</select>

	<!-- 나의 댓글 페이징 처리 - 내비게이션 생성 -->

	<select id="myCommentGetNavi" resultType="java.lang.Integer" parameterType="myCommentPDVO">
		SELECT COUNT(*) AS totalCount
		FROM BOARD_COMMENT_TBL
		WHERE MB_INDEX = #{mbIndex}

	</select>

	<!-- 마이페이지 - 나의 북마크 -->
	<select id="myBookMarkList" resultType="bookMark" parameterType="myBookMarkPDVO">
		SELECT
		BPT.POST_INDEX AS postIndex,
		BCA_INDEX AS bcaIndex,
		DT_TYPE AS dtType,
		MB_ID AS mbId,
		DT_INDEX AS dtIndex,
		POST_TITLE AS
		postTitle,
		DT_TITLE AS dtTitle,
		DT_SAMMARY AS dtSammary,
		DT_DATE AS dtDate,
		DT_LIKE AS
		dtLike,
		DT_SEE AS dtSee,
		POST_DATETIME AS postDateTime,
		POST_LIKE AS postLike,
		BMK_INDEX AS bmkIndex
		FROM (SELECT
		BOARD_BOOKMARK_TBL.*,ROW_NUMBER() OVER(ORDER BY BMK_INDEX DESC)
		AS NUM FROM
		BOARD_BOOKMARK_TBL WHERE MB_INDEX = #{mbIndex}) BMK, MEMBER_TBL MBT,DIETTIP_TB DT ,BOARD_POST_TBL BPT
		WHERE BMK.MB_INDEX =
		MBT.MB_INDEX(+) AND BMK.POST_INDEX = DT.DT_INDEX(+) AND BPT.POST_INDEX(+) =
		BMK.POST_INDEX AND BMK.MB_INDEX= #{mbIndex}
		AND NUM BETWEEN #{start} AND #{end}

	</select>

	<!-- 나의 북마크 - 페이징 처리 -->
	<select id="myBookMarkGetNavi" resultType="java.lang.Integer" parameterType="myBookMarkPDVO">

		SELECT COUNT(*) AS totalCount
		FROM (SELECT
		BOARD_BOOKMARK_TBL.*,ROW_NUMBER() OVER(ORDER BY BMK_INDEX DESC)
		AS NUM FROM
		BOARD_BOOKMARK_TBL WHERE MB_INDEX =#{mbIndex}) BMK, MEMBER_TBL MBT,DIETTIP_TB DT
		,BOARD_POST_TBL
		BPT
		WHERE BMK.MB_INDEX =
		MBT.MB_INDEX(+) AND BMK.POST_INDEX = DT.DT_INDEX(+) AND BPT.POST_INDEX(+) =
		BMK.POST_INDEX AND BMK.MB_INDEX= #{mbIndex}
		and (BPT.POST_INDEX IS NOT NULL OR
		DT.DT_INDEX IS NOT NULL)

	</select>


</mapper>

